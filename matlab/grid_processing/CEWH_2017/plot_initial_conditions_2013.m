clear all; close all;

addpath(genpath('Functions'));

% The files required.


fieldfile = 'Matfiles/lowerlakes.mat';

% defaults = xlsread('Defaults_v3_BB_2009.xlsx','B2:I100');
%
% outfile = 'init_conditions_mid2009.csv';
%
% grid = 'Lakes_Only_ASS_v3_Substrate.2dm';
%
% [XX,YY,nodeID,faces,X,Y,ID] = tfv_get_node_from_2dm(grid);

CHG_BAL_Calc = 1;

shpfile = 'GIS/Interp_7_Zones.shp';

% Date
sdate = datenum(2013,07,01);

% Variables.

% SS1 and SS2 renamed SS11 and SS22 to exclusively use the defulats.
% If the variable name in the Vars cell does not match one found in the
% field data, then it will use the value found in the defaults xlsx
% spreadsheet.
% vars = {...
%     'HH',...
%     'U',...
%     'V',...
%     'SAL1',...
%     'TEMP',...
%     'TRACE_1',...
%  'WQ_TRC_SS11',...
%  'WQ_TRC_RET',...
%  'WQ_OXY_OXY',...
%  'WQ_SIL_RSI1',...
%  'WQ_NIT_AMM',...
%  'WQ_NIT_NIT',...
%  'WQ_PHS_FRP',...
%  'WQ_PHS_FRP_ADS',...
%  'WQ_OGM_DOC',...
%  'WQ_OGM_POC',...
%  'WQ_OGM_DON',...
%  'WQ_OGM_PON',...
%  'WQ_OGM_DOP',...
%  'WQ_OGM_POP',...
%  'WQ_PHY_GRN',...
%     };

vars = {...
    'H',...
        'U',...
    'V',...
    'SAL',...
    'TEMP',...
    'TRACE_1',...
    'WQ_TRC_AGE',...
    'WQ_NCS_SS1',...
'WQ_OXY_OXY',...
'WQ_SIL_RSI',...
'WQ_NIT_AMM',...
'WQ_NIT_NIT',...
'WQ_PHS_FRP',...
'WQ_PHS_FRP_ADS',...
'WQ_OGM_DOC',...
'WQ_OGM_POC',...
'WQ_OGM_DON',...
'WQ_OGM_PON',...
'WQ_OGM_DOP',...
'WQ_OGM_POP',...
'WQ_PHY_GRN',...
    };

writevars = {...
    'WL',...
    'U',...
    'V',...
    'SAL',...
    'TEMP',...
    'TRACE_1',...
    'WQ_1',...
    'WQ_2',...
    'WQ_3',...
    'WQ_4',...
    'WQ_5',...
    'WQ_6',...
    'WQ_7',...
    'WQ_8',...
    'WQ_9',...
    'WQ_10',...
    'WQ_11',...
    'WQ_12',...
    'WQ_13',...
    'WQ_14',...
    'WQ_15',...
    };

% vars = {...
%     'H',...
%     'U',...
%     'V',...
%     'SAL',...
%     'TEMP',...
%     };
% 
% writevars = {...
%     'WL',...
%     'U',...
%     'V',...
%     'SAL',...
%     'TEMP',...
%     };


default_value = 0;


% Processing
%__________________________________________________________________________

% Load Field data
temp = load(fieldfile);
tt = fieldnames(temp);

fdata = temp.(tt{1}); clear temp tt;

%fdata = clip_fielddata(fdata,datenum(2014,07,01));

shp = shaperead(shpfile);





sites = fieldnames(fdata);

for i = 1:length(vars)
    for j = 1:length(sites)
        for k = 1:length(shp)
            init.(vars{i}).(['zone',num2str(k)]).Data = [];
            init.(vars{i}).(['zone',num2str(k)]).Date = [];
        end
    end
end
for i = 1:length(vars)
    disp(['Now Processing: ',vars{i}]);
    
    for j = 1:length(sites)
        if isfield(fdata.(sites{j}),vars{i})
            %disp(['Building Sites']);
            for k = 1:length(shp)
                %disp(['Inpol']);
                
                inpol = inpolygon(fdata.(sites{j}).(vars{i}).X,fdata.(sites{j}).(vars{i}).Y,shp(k).X,shp(k).Y);
                
               
                if inpol

                    ZZ(:,1) = fdata.(sites{j}).(vars{i}).Data;
                    DD(:,1) = fdata.(sites{j}).(vars{i}).Date;
                    
                    init.(vars{i}).(['zone',num2str(k)]).Data = [init.(vars{i}).(['zone',num2str(k)]).Data;ZZ];
                    init.(vars{i}).(['zone',num2str(k)]).Date = [init.(vars{i}).(['zone',num2str(k)]).Date;DD];
                    init.(vars{i}).(['zone',num2str(k)]).Name = shp(k).Name;

                    clear ZZ DD
                    
                end
            end
            
        end
    end
end

save init.mat init -mat;


outdir = 'Images_2013_07/';

if ~exist(outdir,'dir')
    mkdir(outdir);
end

vars = fieldnames(init);
for i = 1:length(vars)
    zones = fieldnames(init.(vars{i}));
    
    for j = 1:length(zones)
        
        if ~isempty(init.(vars{i}).(['zone',num2str(j)]).Date)
        
        datearray = [sdate-100:20:sdate+100];
        
        [xdata_d,ydata_d] = process_daily(init.(vars{i}).(['zone',num2str(j)]).Date,init.(vars{i}).(['zone',num2str(j)]).Data);
        
        
        ss = find(xdata_d >= datearray(1) & xdata_d <= datearray(end));
        
        plot(xdata_d(ss),ydata_d(ss),'.K');hold on
                yl = get(gca,'ylim');
        
       bb = find(~isnan(ydata_d(ss)));
       if ~isempty(bb)
       mean_val = mean(ydata_d(ss(bb)));
       else
           mean_val = 0;
       end
       

       
        title([regexprep(vars{i},'_',' '),' Zone:',num2str(j),' ',init.(vars{i}).(['zone',num2str(j)]).Name]);
        plot([sdate sdate],[0 yl(2)],':r');
            plot([datearray(1) sdate],[mean_val mean_val],':r');
    
        text(0.9,0.9,num2str(mean_val),'units','normalized');
        
        %plot([datearray(1) sdate],yl,':r');
        
        xlim([datearray(1) datearray(end)]);
        
        set(gca,'xtick',datearray,'xticklabel',datestr(datearray,'dd-mm-yy'));
        
        fin_dir = [outdir,vars{i},'/'];
        if ~exist(fin_dir,'dir')
            mkdir(fin_dir);
        end
        
        img_name = [fin_dir,zones{j},'.png'];
           
        
        saveas(gcf,img_name);
        
        close;
        
        end
    end
end




